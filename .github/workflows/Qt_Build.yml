name: Qt Build

on:
  push:
    branches:
      - master
  pull_request:

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  Windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Fetch submodules
      run: git submodule update --init --recursive

    - name: Setup Qt
      uses: jurplel/install-qt-action@v3
      with:
        arch: win64_msvc2019_64
        version: 6.2.0

    - name: Setup Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: latest
        vulkan-use-cache: true
        vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DENABLE_USER_BUILD=ON -DENABLE_QT_GUI=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Upload executable
      uses: actions/upload-artifact@v2
      with:
        name: Windows executable
        path: './build/Release/Alber.exe'

  MacOS:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Fetch submodules
      run: git submodule update --init --recursive

    - name: Setup Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: latest
        vulkan-use-cache: true
        vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DENABLE_USER_BUILD=ON -DENABLE_QT_GUI=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Install bundle dependencies
      run: brew install dylibbundler imagemagick qt

    - name: Run bundle script
      run: ./.github/mac-bundle.sh

    - name: Sign the App
      run: codesign --force -s - -vvvv Alber.app

    - name: Zip it up
      run: zip -r Alber Alber.app

    - name: Upload MacOS App
      uses: actions/upload-artifact@v2
      with:
        name: MacOS Alber App Bundle
        path: 'Alber.zip'

  Linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Fetch submodules
      run: git submodule update --init --recursive

    - name: Install misc packages
      run: sudo apt-get update && sudo apt install libx11-dev libgl1-mesa-glx mesa-common-dev

    - name: Setup Vulkan SDK
      uses: humbletim/setup-vulkan-sdk@v1.2.0
      with:
        vulkan-query-version: latest
        vulkan-use-cache: true
        vulkan-components: Vulkan-Headers, Vulkan-Loader, Glslang

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ -DENABLE_USER_BUILD=ON

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Upload executable
      uses: actions/upload-artifact@v2
      with:
        name: Linux executable
        path: './build/Alber'